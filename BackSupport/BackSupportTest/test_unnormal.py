from BackSupport import create_app
from BackSupport.model_logic.VoltageModel import db, Device  # 确保导入Device模型
from BackSupport.utils.dbutils import read_data_from_database
import datetime

# 你可以把这部分代码放到一个函数中，而不是在模块层级执行
def print_odd_voltages():
    app = create_app()
    with app.app_context():
        odd_voltages = Device.get_odd_voltages()
        for voltages in odd_voltages:
            print(voltages)


# 测试dbutils.py中的read_data_from_database方法返回值
def print_data_device1():
    data_list = read_data_from_database('device1')
    for data in data_list:
        if isinstance(data['CollectTime'], datetime.datetime):
            data['CollectTime'] = data[
                'CollectTime'].isoformat()  # 输出的日期时间格式是 "YYYY-MM-DDTHH:MM:SS" 形式的 ISO 标准字符串

    print(data_list)
    # 在列表中，以字典的形式存储了数据库中的数据
    # [{'ID': 1, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 2, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 3, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 4, 'InfoType': 2, 'DeviceNodeID': 'node2', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 5, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 6, 'InfoType': 2, 'DeviceNodeID': 'node2', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 7, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 8, 'InfoType': 2, 'DeviceNodeID': 'node2', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 9, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 10, 'InfoType': 2, 'DeviceNodeID': 'node2', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 11, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 12, 'InfoType': 2, 'DeviceNodeID': 'node2', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 13, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 14, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 15, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}, {'ID': 16, 'InfoType': 2, 'DeviceNodeID': 'node1', 'DeviceName': '电动机', 'UserID': '1001', 'CollectTime': datetime.datetime(2019, 3, 13, 21, 15, 41), 'Voltage1': 2.21, 'Voltage2': 1.89, 'Voltage3': 3.45, 'Voltage4': 2.78, 'Voltage5': 3.67, 'Voltage6': 1.45, 'Voltage7': 2.9, 'Voltage8': 2.22, 'Voltage9': 1.78, 'Voltage10': 2.67, 'Voltage11': 1.34, 'Voltage12': 2.89, 'Voltage13': 2.24, 'Voltage14': 1.92, 'Voltage15': 5.91, 'Voltage16': 4.32}]



# 然后在你想打印变量的时候调用这个函数
if __name__ == '__main__':
    # print_odd_voltages()
    print_data_device1()